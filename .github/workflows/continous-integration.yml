name: Continous Integration

on:
  push:
    branches:
      - '*'
    tags:
      - '*'
    paths-ignore:
      - 'History.md'
      - 'README.md'

jobs:
  warmupCache:
    name: Warmup Cache
    runs-on: ubuntu-latest
    steps:
      - name: Checkout
        uses: actions/checkout@v2
      - name: Setup Docker Buildx
        uses: docker/setup-buildx-action@v1
      - name: Cache Docker layers
        uses: actions/cache@v2
        with:
          path: /tmp/.buildx-cache
          key: ${{ runner.os }}-runner-${{ hashFiles('Dockerfile') }}
      - name: Build
        uses: docker/build-push-action@v2
        with:
          builder: ${{ steps.buildx.outputs.name }}
          push: false
          cache-from: type=local,src=/tmp/.buildx-cache
          cache-to: type=local,mode=max,dest=/tmp/.buildx-cache-new
      - name: Move cache
        run: |
          rm -rf /tmp/.buildx-cache
          mv /tmp/.buildx-cache-new /tmp/.buildx-cache

  test:
    name: Test
    runs-on: ubuntu-latest
    needs: [ warmupCache ]
    strategy:
      matrix:
        libvips: ["8.10.6", "8.11.4", "8.12.2"]
    steps:
      - name: Checkout
        uses: actions/checkout@v2
      - name: Setup Docker Buildx
        uses: docker/setup-buildx-action@v1
      - name: Cache Docker layers
        uses: actions/cache@v2
        with:
          path: /tmp/.buildx-cache
          key: ${{ runner.os }}-runner-${{ hashFiles('Dockerfile') }}
      - name: Build test-executor
        uses: docker/build-push-action@v2
        with:
          builder: ${{ steps.buildx.outputs.name }}
          build-args: |
            "VIPS_VERSION=${{ matrix.libvips }}"
          tags: h2non/bimg:ci-${{ matrix.libvips }}
          load: true
          push: false
          cache-from: type=local,src=/tmp/.buildx-cache
          cache-to: type=local,mode=max,dest=/tmp/.buildx-cache-new
      - name: Move cache
        run: |
          rm -rf /tmp/.buildx-cache
          mv /tmp/.buildx-cache-new /tmp/.buildx-cache
      - name: Run tests
        run: docker run --rm -v $PWD:/build h2non/bimg:ci-${{ matrix.libvips }} sh -c 'cd /build && go vet . && $(go env GOPATH)/bin/golangci-lint run && go test -v -race -covermode=atomic -coverprofile=coverage.out'
